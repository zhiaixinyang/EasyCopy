package com.mdove.easycopy.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.mdove.easycopy.greendao.entity.CopyData;
import com.mdove.easycopy.greendao.entity.ResultOCR;

import com.mdove.easycopy.greendao.CopyDataDao;
import com.mdove.easycopy.greendao.ResultOCRDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig copyDataDaoConfig;
    private final DaoConfig resultOCRDaoConfig;

    private final CopyDataDao copyDataDao;
    private final ResultOCRDao resultOCRDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        copyDataDaoConfig = daoConfigMap.get(CopyDataDao.class).clone();
        copyDataDaoConfig.initIdentityScope(type);

        resultOCRDaoConfig = daoConfigMap.get(ResultOCRDao.class).clone();
        resultOCRDaoConfig.initIdentityScope(type);

        copyDataDao = new CopyDataDao(copyDataDaoConfig, this);
        resultOCRDao = new ResultOCRDao(resultOCRDaoConfig, this);

        registerDao(CopyData.class, copyDataDao);
        registerDao(ResultOCR.class, resultOCRDao);
    }
    
    public void clear() {
        copyDataDaoConfig.clearIdentityScope();
        resultOCRDaoConfig.clearIdentityScope();
    }

    public CopyDataDao getCopyDataDao() {
        return copyDataDao;
    }

    public ResultOCRDao getResultOCRDao() {
        return resultOCRDao;
    }

}
